# docker-compose for dev
version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app

  question:
    build:
      context: ./backend/question-service
      dockerfile: Dockerfile.dev
    ports:
      - "2000:2000"
    develop:
      watch:
        - action: sync
          path: ./backend/question-service
          target: /app

  user:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/user-service/.env
    ports:
      - "3001:3001"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 10

  matching-service:
    build:
      context: ./backend/matching-service
      dockerfile: Dockerfile.match
    environment:
      KAFKA_BROKER: kafka:9092
    ports:
      - "3002:3002"
    depends_on:
      kafka:
        condition: service_healthy
